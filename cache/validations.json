{
  "version": "3.2",
  "log": [
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1089",
        "version": {
          "withMetadata": "d457638cc2929f5542e40f7e89b8d626ad9c29841cf2550a9cbc18ab02df9367",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "fd027184327579a9c5f599d676e40bd06395c728821f591185bf75c798cb056c",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "1c79b2d05414492bbfd39aaa01f47b0f588b344aaec64d2b553c571b3b883782",
          "withoutMetadata": "85faa210b6dcdbf7d840656e4ce0a6d1c87e57de3d9a9ad4691335e8c06e04f0",
          "linkedWithoutMetadata": "85faa210b6dcdbf7d840656e4ce0a6d1c87e57de3d9a9ad4691335e8c06e04f0"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "setCurrency(address,bool)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "isCurrency",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_contract(IERC20)675,t_bool)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:472"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)807_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)814_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:519"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)777_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:521"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)777_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_contract(IERC20)675,t_bool)": {
              "label": "mapping(contract IERC20 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)777_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)814_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)807_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3556_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)814_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)807_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)777_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1121",
        "version": {
          "withMetadata": "399734533581433b93f19566e3c1d28ae4c5c51bfc1d54ecd65aac9f1bb221da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1089",
        "version": {
          "withMetadata": "d457638cc2929f5542e40f7e89b8d626ad9c29841cf2550a9cbc18ab02df9367",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "fd027184327579a9c5f599d676e40bd06395c728821f591185bf75c798cb056c",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "1c79b2d05414492bbfd39aaa01f47b0f588b344aaec64d2b553c571b3b883782",
          "withoutMetadata": "85faa210b6dcdbf7d840656e4ce0a6d1c87e57de3d9a9ad4691335e8c06e04f0",
          "linkedWithoutMetadata": "85faa210b6dcdbf7d840656e4ce0a6d1c87e57de3d9a9ad4691335e8c06e04f0"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "setCurrency(address,bool)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3556_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "isCurrency",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_contract(IERC20)675,t_bool)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:472"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)807_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)814_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:519"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)777_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:521"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)777_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_contract(IERC20)675,t_bool)": {
              "label": "mapping(contract IERC20 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)777_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)814_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)807_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3556_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)814_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)807_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)777_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1121",
        "version": {
          "withMetadata": "399734533581433b93f19566e3c1d28ae4c5c51bfc1d54ecd65aac9f1bb221da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1083",
        "version": {
          "withMetadata": "a4edc61dfaf4021d3835efedda39d196e9b1c967a7c008b1dc5c324ea7306472",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "60dc385440b365232eaf734995093388b69796c420dc2ba1eb5e42081a28f241",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "517bff60e7b0f3491a01657b9bb248981ebfde8c9b5112c0022d76596ba065f3",
          "withoutMetadata": "ada330251d373c80c96fd3d5fd4f606a5a60167709aaca80365221e84f9a9430",
          "linkedWithoutMetadata": "ada330251d373c80c96fd3d5fd4f606a5a60167709aaca80365221e84f9a9430"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3517_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1115",
        "version": {
          "withMetadata": "5410dd545f201ea48acdb10e29c002eab58058fb223b3201de3bdfe6020ae189",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1083",
        "version": {
          "withMetadata": "a4edc61dfaf4021d3835efedda39d196e9b1c967a7c008b1dc5c324ea7306472",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "60dc385440b365232eaf734995093388b69796c420dc2ba1eb5e42081a28f241",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "517bff60e7b0f3491a01657b9bb248981ebfde8c9b5112c0022d76596ba065f3",
          "withoutMetadata": "ada330251d373c80c96fd3d5fd4f606a5a60167709aaca80365221e84f9a9430",
          "linkedWithoutMetadata": "ada330251d373c80c96fd3d5fd4f606a5a60167709aaca80365221e84f9a9430"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3517_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1115",
        "version": {
          "withMetadata": "5410dd545f201ea48acdb10e29c002eab58058fb223b3201de3bdfe6020ae189",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1083",
        "version": {
          "withMetadata": "a4edc61dfaf4021d3835efedda39d196e9b1c967a7c008b1dc5c324ea7306472",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "60dc385440b365232eaf734995093388b69796c420dc2ba1eb5e42081a28f241",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "517bff60e7b0f3491a01657b9bb248981ebfde8c9b5112c0022d76596ba065f3",
          "withoutMetadata": "ada330251d373c80c96fd3d5fd4f606a5a60167709aaca80365221e84f9a9430",
          "linkedWithoutMetadata": "ada330251d373c80c96fd3d5fd4f606a5a60167709aaca80365221e84f9a9430"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3517_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1115",
        "version": {
          "withMetadata": "5410dd545f201ea48acdb10e29c002eab58058fb223b3201de3bdfe6020ae189",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1083",
        "version": {
          "withMetadata": "445b873c22c4967994d6d49212bfb28c661d0e2b4237a350c1fa6ad2673a8ce2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "ff4996a7bf58e00ae76ae997abed0e9a64dd1efc0024d4b18374f4c6e5b6cdcc",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "6817f465c90c8bddf597c85df4943bcf906bd2873042a27f6fa9b8ac98e60949",
          "withoutMetadata": "eb89eaf3948a3605bafdc0b568ff7585d0a2a01c47fd65e851a9a38987748fc3",
          "linkedWithoutMetadata": "eb89eaf3948a3605bafdc0b568ff7585d0a2a01c47fd65e851a9a38987748fc3"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3517_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1115",
        "version": {
          "withMetadata": "d4f95d6e0001aaf1f7b3b9243c68099835ea1cd7e105256b5b31167507a1720c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1083",
        "version": {
          "withMetadata": "445b873c22c4967994d6d49212bfb28c661d0e2b4237a350c1fa6ad2673a8ce2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "ff4996a7bf58e00ae76ae997abed0e9a64dd1efc0024d4b18374f4c6e5b6cdcc",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "6817f465c90c8bddf597c85df4943bcf906bd2873042a27f6fa9b8ac98e60949",
          "withoutMetadata": "eb89eaf3948a3605bafdc0b568ff7585d0a2a01c47fd65e851a9a38987748fc3",
          "linkedWithoutMetadata": "eb89eaf3948a3605bafdc0b568ff7585d0a2a01c47fd65e851a9a38987748fc3"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3517_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3517_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1115",
        "version": {
          "withMetadata": "d4f95d6e0001aaf1f7b3b9243c68099835ea1cd7e105256b5b31167507a1720c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1086",
        "version": {
          "withMetadata": "0f4b29f5c588e261545e3efac5cd0aa8c14cf0245d85cb5df5188fa4a7e57be9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "0a977bc9196618a1a3240b9282330ff0a4334fac7ea973b38f116e062d4f69b6",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "f3a5f3f884553e93e050b297c7c02a8b1ba4dd29e5393f780dff40a68615bb19",
          "withoutMetadata": "c31a3a759143ee0fd50a6ffa1315580bc25eb90934876b5b12c054c2e4ccbdfa",
          "linkedWithoutMetadata": "c31a3a759143ee0fd50a6ffa1315580bc25eb90934876b5b12c054c2e4ccbdfa"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            },
            {
              "label": "xxx",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3522_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1118",
        "version": {
          "withMetadata": "7d80ddb3aba1bce78d2a509d6f92f1b2402dbafc8d25e4980ae49249de9ebd76",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1086",
        "version": {
          "withMetadata": "0f4b29f5c588e261545e3efac5cd0aa8c14cf0245d85cb5df5188fa4a7e57be9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "0a977bc9196618a1a3240b9282330ff0a4334fac7ea973b38f116e062d4f69b6",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "f3a5f3f884553e93e050b297c7c02a8b1ba4dd29e5393f780dff40a68615bb19",
          "withoutMetadata": "c31a3a759143ee0fd50a6ffa1315580bc25eb90934876b5b12c054c2e4ccbdfa",
          "linkedWithoutMetadata": "c31a3a759143ee0fd50a6ffa1315580bc25eb90934876b5b12c054c2e4ccbdfa"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            },
            {
              "label": "xxx",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3522_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1118",
        "version": {
          "withMetadata": "7d80ddb3aba1bce78d2a509d6f92f1b2402dbafc8d25e4980ae49249de9ebd76",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1087",
        "version": {
          "withMetadata": "b07cb9239ce88ea850e0e59e93853a0861797b8c4bebbb803570fa75ada7dc08",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "6cb699728fc09b8723d5561c0a6a3e1c8dad792a736745ee6d510e296368e713",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "ec2632a4a4f9ad20929b4fe3fdd42209f0f445c16fab00ed527fa327458e2f26",
          "withoutMetadata": "438189f4d1b01c86b2a4a9bf423b4187b8e33808895929148b04e8e659e9bb2d",
          "linkedWithoutMetadata": "438189f4d1b01c86b2a4a9bf423b4187b8e33808895929148b04e8e659e9bb2d"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3526_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3526_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3526_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3526_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "xxx",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:473"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)808_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:519"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)815_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:521"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)778_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:523"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)778_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)778_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)815_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)808_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3526_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)815_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)808_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)778_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1119",
        "version": {
          "withMetadata": "50ec720d7e7f80e583240877e505aff0038bf4d0df3aeb05e9c5a155b12bffb0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1086",
        "version": {
          "withMetadata": "4fd6f37c94024313e44a694eb604d4b2e7de38e57a5fb5ee10e87da9f1e06016",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "8b32a197b0011d2482fa211b188352361a084b92acddcff50fef8749b77c2730",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "714200a1cd04754efdc845107049c579159de90c20a1b80a0d7754e7257bf76c",
          "withoutMetadata": "8d1d213ca4fa6968d6dc458b0080b74b99771fbe6d028be644961836bdf53265",
          "linkedWithoutMetadata": "8d1d213ca4fa6968d6dc458b0080b74b99771fbe6d028be644961836bdf53265"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "xxx",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:482"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)804_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)811_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:519"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)774_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:522"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)774_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)774_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)811_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)804_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3522_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)811_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)804_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)774_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1118",
        "version": {
          "withMetadata": "8b9c76cd2088ded9f60689fb2bfb87c6dc91e57668b2bfb7ab4c7e2dc36ac2d6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1086",
        "version": {
          "withMetadata": "2952d13de4f896eaf8dfe1736ef81b5c095da6606f808b8db09c2d11d70e81b8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "df9598349f2d67172027255535d913964f8048b1f0c92b2cac971a00df0e26e0",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "5fe1bdd3cdf28fbbfefe3a2ce0528c239127d6612a695179430b5a4c61018865",
          "withoutMetadata": "9b9637eab215475db102ccf95b98d0ba5eced0ccf8cde95f5bd244c88c81540b",
          "linkedWithoutMetadata": "9b9637eab215475db102ccf95b98d0ba5eced0ccf8cde95f5bd244c88c81540b"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3522_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "xxx",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:473"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)804_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)811_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:519"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)774_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:522"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)774_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)774_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)811_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)804_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3522_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)811_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)804_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)774_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1118",
        "version": {
          "withMetadata": "d472edd8207c11d624a6ef266891cdebfa2b51c51965638d54cafa00e0b0a317",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1081",
        "version": {
          "withMetadata": "11014eb010771109327d1619c483746b729741e66aa27c3623fd0ed8b47a2fca",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "c1d12e6f8108adf7108584e5e9c4c04749b9c988321a377d63066a106119c65a",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "4e34e86e1bf09633736aca0dd69fabd17a693805b5efd22230ed1b61f779a5e8",
          "withoutMetadata": "8b788f7ace9ed3b0ee9b306e6e35e04ccd4790dd34ff345f969b6ffa697d1560",
          "linkedWithoutMetadata": "8b788f7ace9ed3b0ee9b306e6e35e04ccd4790dd34ff345f969b6ffa697d1560"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3512_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1113",
        "version": {
          "withMetadata": "7825fa9981d7c9965e98aa8477cd3c2953037400f28f5fab470489956448163a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1081",
        "version": {
          "withMetadata": "11014eb010771109327d1619c483746b729741e66aa27c3623fd0ed8b47a2fca",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "c1d12e6f8108adf7108584e5e9c4c04749b9c988321a377d63066a106119c65a",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "4e34e86e1bf09633736aca0dd69fabd17a693805b5efd22230ed1b61f779a5e8",
          "withoutMetadata": "8b788f7ace9ed3b0ee9b306e6e35e04ccd4790dd34ff345f969b6ffa697d1560",
          "linkedWithoutMetadata": "8b788f7ace9ed3b0ee9b306e6e35e04ccd4790dd34ff345f969b6ffa697d1560"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3512_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3512_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1113",
        "version": {
          "withMetadata": "7825fa9981d7c9965e98aa8477cd3c2953037400f28f5fab470489956448163a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:455",
        "version": {
          "withMetadata": "3ccd8357e5f124e02462ea67a8dc910da11f40861980f022c1d4625ca19d60b7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\NFTBasic(ERC-1155).sol:614"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:223",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1155": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:664",
        "version": {
          "withMetadata": "56f87de3c03206dce7fc92f96f009d762129a503989c8ca53b2b958b3f834ac4",
          "withoutMetadata": "ff0e84965a5c1ffdb81d89c1f643128ba2a19fd6e2fdb9b84574bec73d537770",
          "linkedWithoutMetadata": "ff0e84965a5c1ffdb81d89c1f643128ba2a19fd6e2fdb9b84574bec73d537770"
        },
        "inherit": [
          "TokenURI",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "(string)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts\\NFTBasic(ERC-1155).sol:698"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTBasic(ERC-1155).sol:254"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTBasic(ERC-1155).sol:641"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:669"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:672"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:675"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:245",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts\\NFTBasic(ERC-1155).sol:256"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTBasic(ERC-1155).sol:254"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:39",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155MetadataURI": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:142",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155Receiver": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:160",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:1084",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\NFTBasic(ERC-1155).sol:1092"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1085"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:305",
        "version": {
          "withMetadata": "0a547bbb7557329c9f8e7cc518d3e1f4d0ef243800e8e39c07c3d7126bbf518a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:1136",
        "version": {
          "withMetadata": "d2f334b028c57a18710ea50b30fe90d9872ab66f221052a928002654301af52b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Terraworld": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:1161",
        "version": {
          "withMetadata": "591c56b5d6d5561ba8ec2deeaf91d9fc2d1f6e0c67b70de87be4ca946b1fe084",
          "withoutMetadata": "8ede099e4e981316686d8e56852959d15493edf68deba80b1709988f7e50b2bf",
          "linkedWithoutMetadata": "8ede099e4e981316686d8e56852959d15493edf68deba80b1709988f7e50b2bf"
        },
        "inherit": [
          "Ownable",
          "ERC1155",
          "TokenURI",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "mint(string,string,uint256)",
          "getCount()",
          "uri(uint256)",
          "setTokenUri(uint256,string)",
          "getTokenIDs(address)",
          "getTokenOwners(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Terraworld",
            "src": "contracts\\NFTBasic(ERC-1155).sol:1187"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTBasic(ERC-1155).sol:254"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTBasic(ERC-1155).sol:641"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:669"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:672"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:675"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1085"
            },
            {
              "label": "hashes",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1164"
            },
            {
              "label": "logo",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1166"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1168"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1170"
            },
            {
              "label": "_hashExists",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1172"
            },
            {
              "label": "_tokenOwner",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1175"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1177"
            },
            {
              "label": "_tokenIDs",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1179"
            },
            {
              "label": "_hashToken",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1182"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_memory_ptr": {
              "label": "string"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenURI": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:639",
        "version": {
          "withMetadata": "69f70eab50dd5ebb874dc78a3f627ea99b15cb7ef4d8cf5389addfa03e62c667",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTBasic(ERC-1155).sol:641"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1077",
        "version": {
          "withMetadata": "c33775811e6f07160bae8e479a1465028ae0f8837e4bd524eea4432e99bff2db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "df9bb22b8ce06287ca5a462c20819ff912ea5c0ec9e065202dfe1e9cbb1a6f1d",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "919ef2f2882fdcc8e28b75b91fabd2d709bed296ff97f5123a3bba1ddf9b5e3d",
          "withoutMetadata": "21d6c73a36adc4af1d6439229e4bc0438cca87ec814912560dd137e90962c4e5",
          "linkedWithoutMetadata": "21d6c73a36adc4af1d6439229e4bc0438cca87ec814912560dd137e90962c4e5"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3482_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1109",
        "version": {
          "withMetadata": "309ecd506d61e1b0b61fb61cb0111bb4aa6d070c88d98bca6312e041ad1a01c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1077",
        "version": {
          "withMetadata": "c33775811e6f07160bae8e479a1465028ae0f8837e4bd524eea4432e99bff2db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "df9bb22b8ce06287ca5a462c20819ff912ea5c0ec9e065202dfe1e9cbb1a6f1d",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "919ef2f2882fdcc8e28b75b91fabd2d709bed296ff97f5123a3bba1ddf9b5e3d",
          "withoutMetadata": "21d6c73a36adc4af1d6439229e4bc0438cca87ec814912560dd137e90962c4e5",
          "linkedWithoutMetadata": "21d6c73a36adc4af1d6439229e4bc0438cca87ec814912560dd137e90962c4e5"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3482_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)802_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)772_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)675": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)772_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)809_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)802_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3482_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)809_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)802_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)675"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)772_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1109",
        "version": {
          "withMetadata": "309ecd506d61e1b0b61fb61cb0111bb4aa6d070c88d98bca6312e041ad1a01c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1077",
        "version": {
          "withMetadata": "3f6f691107b345297f7794e242158cc4ad7f4a74ec213fffedd0d79771950089",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "1c2f8a064d2b9403c871cf42eba922416fcb636f3be3ef634694149992274fca",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "ba5523887d8eb4255862c77443f53083fff977271f83d882c66c98ad4ffd460e",
          "withoutMetadata": "20abf89dc6299bb18885fe7df998b49fe356a3bfa79ba0530a7056cdf2d4b5e8",
          "linkedWithoutMetadata": "20abf89dc6299bb18885fe7df998b49fe356a3bfa79ba0530a7056cdf2d4b5e8"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)803_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)810_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)773_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)773_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)676": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)773_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)810_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)803_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3483_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)810_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)803_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)676"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)773_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_status",
            "src": "contracts\\NFTMarket(ERC-1155).sol:214"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1109",
        "version": {
          "withMetadata": "c25a087eca6fe0f32cc485d5975dbb5b814feed5e2c4d203b30b42f177575996",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1077",
        "version": {
          "withMetadata": "b8465137b5ca762b2311bbf9b623830d5150a3a661557c250343c3e00fd2e0d0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "ffb5ecbd27e112db72afc34cb7ccb6b9efed5ab6999e7f5433c46a5fbd079a34",
          "withoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5",
          "linkedWithoutMetadata": "65efb2008b4f9525085b5cdfb122428e206abc02f22e23c1e382ab860aad0ff5"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "c14eab3da5f07f011c04fc0134f54c0e5f920146159581d35f0b484662254bed",
          "withoutMetadata": "50bb8c8a486ae984a3a3f8f7e2eb3ad463608ae7193c8a5d5696765864087a4f",
          "linkedWithoutMetadata": "50bb8c8a486ae984a3a3f8f7e2eb3ad463608ae7193c8a5d5696765864087a4f"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "discountManager",
            "src": "contracts\\NFTMarket(ERC-1155).sol:466"
          },
          {
            "kind": "state-variable-assignment",
            "name": "saleFeePercentage",
            "src": "contracts\\NFTMarket(ERC-1155).sol:468"
          },
          {
            "kind": "state-variable-assignment",
            "name": "volumeTraded",
            "src": "contracts\\NFTMarket(ERC-1155).sol:469"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalSellerFee",
            "src": "contracts\\NFTMarket(ERC-1155).sol:470"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sellerFee",
            "src": "contracts\\NFTMarket(ERC-1155).sol:471"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3491_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3491_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3491_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3491_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)811_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:516"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)818_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:517"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:518"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)781_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:520"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)781_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)676": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)781_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)818_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)811_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3491_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)818_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)811_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)676"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)781_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_status",
            "src": "contracts\\NFTMarket(ERC-1155).sol:214"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1109",
        "version": {
          "withMetadata": "d3ede4daf2ab628fd7ae233f8c45aa5ef2da4d53cad188a38aa142865edb547b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "08c4e6c018e552fd86ee583bd319db0356acc23e239b619de96c2d3ffa8faeeb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1072",
        "version": {
          "withMetadata": "4c9dcc220bb20b70fd8e2e221b0ad7309e6cce9e3e223a7827e0a3bd025e97c6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:277",
        "version": {
          "withMetadata": "b00d6c8b54e743da2c117989606d4ddc23fff7aae539d48c7e5561f28cfeb15e",
          "withoutMetadata": "5e63b116a46d73fdf018632db1780ff7baa6a311179116cce75e7571db3bb8e4",
          "linkedWithoutMetadata": "5e63b116a46d73fdf018632db1780ff7baa6a311179116cce75e7571db3bb8e4"
        },
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts\\NFTMarket(ERC-1155).sol:288"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:244",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:257",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:387",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:45",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:448",
        "version": {
          "withMetadata": "3b25f7f89f01ff33f0884e54a2e06a8771ee9710276df32a445c12571dbe52d7",
          "withoutMetadata": "95a46cf4dc46a023ca9af04c29b71840fc1d1e3e520930d2d17f2949492ada4b",
          "linkedWithoutMetadata": "95a46cf4dc46a023ca9af04c29b71840fc1d1e3e520930d2d17f2949492ada4b"
        },
        "inherit": [
          "Initializable",
          "NFTReceiver",
          "ERC165",
          "IERC165",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "initialize()",
          "makeOffer(uint256,uint256,uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,uint8,bool,address,uint256,uint256,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256,uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "getAveragePrice(address,uint256)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)",
          "getItemIDsForToken(address,uint256)",
          "setSellerFee(uint8)",
          "withDraw(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "discountManager",
            "src": "contracts\\NFTMarket(ERC-1155).sol:466"
          },
          {
            "kind": "state-variable-assignment",
            "name": "saleFeePercentage",
            "src": "contracts\\NFTMarket(ERC-1155).sol:468"
          },
          {
            "kind": "state-variable-assignment",
            "name": "volumeTraded",
            "src": "contracts\\NFTMarket(ERC-1155).sol:469"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalSellerFee",
            "src": "contracts\\NFTMarket(ERC-1155).sol:470"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sellerFee",
            "src": "contracts\\NFTMarket(ERC-1155).sol:471"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "2",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:458"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:459"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:460"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)3483_storage",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:463"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:465"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:466"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:468"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:469"
            },
            {
              "label": "totalSellerFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:470"
            },
            {
              "label": "sellerFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:471"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)803_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:511"
            },
            {
              "label": "idToMarketAuctionItem",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_struct(MarketAuctionItem)810_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:512"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:513"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)773_storage)dyn_storage)",
              "contract": "NFTMarket",
              "src": "contracts\\NFTMarket(ERC-1155).sol:515"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)773_storage)dyn_storage": {
              "label": "struct NFTMarket.MarketOffer[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_contract(IERC20)691": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(uint256 => uint256[]))"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)773_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])"
            },
            "t_mapping(t_uint256,t_struct(MarketAuctionItem)810_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketAuctionItem)"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)803_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)3483_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketAuctionItem)810_storage": {
              "label": "struct NFTMarket.MarketAuctionItem",
              "members": [
                {
                  "label": "flashPrice",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)803_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "kind",
                  "type": "t_uint8"
                },
                {
                  "label": "hasAmount",
                  "type": "t_bool"
                },
                {
                  "label": "currency",
                  "type": "t_contract(IERC20)691"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "soldAmount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketOffer)773_storage": {
              "label": "struct NFTMarket.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTReceiver": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:323",
        "inherit": [
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTMarket(ERC-1155).sol:286"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\NFTMarket(ERC-1155).sol:216"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket(ERC-1155).sol:214"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket(ERC-1155).sol:1104",
        "version": {
          "withMetadata": "636c54e6be97d8bca426c0be86c5a4bb2ab81d684a5fcfc2ad2c485523021fdb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "contracts\\NFTMarket.sol:646",
        "version": {
          "withMetadata": "0a81eff197cef7809ab97608c16af95d420b759e66a7adb3ba93eacc33147fed",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDiscountManager": {
        "src": "contracts\\NFTMarket.sol:229",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDiscount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTMarket.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTMarket.sol:30",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTMarket721": {
        "src": "contracts\\NFTMarket.sol:234",
        "version": {
          "withMetadata": "4c42c4c11b47fb300382d50b7a35d9269db5af6a991b633e4627b8a94163f0b2",
          "withoutMetadata": "9682aa42767224ecd5189b10b798e10220300d3d32a143126f323ef5547cd582",
          "linkedWithoutMetadata": "9682aa42767224ecd5189b10b798e10220300d3d32a143126f323ef5547cd582"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "()",
          "makeOffer(uint256)",
          "acceptOffer(uint256,uint256)",
          "cancelOffer(uint256,uint256)",
          "getMarketOffers(uint256)",
          "getItemsSold()",
          "numberOfItemsListed()",
          "createMarketItem(address,uint256,uint256,string)",
          "cancelMarketItem(uint256)",
          "createMarketSale(uint256)",
          "getMarketItems()",
          "fetchPurchasedNFTs()",
          "fetchCreateNFTs()",
          "getItemsByCategory(string)",
          "setSalePercentageFee(uint256)",
          "setOwner(address)",
          "setDiscountManager(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "discountManager",
            "src": "contracts\\NFTMarket.sol:252"
          },
          {
            "kind": "state-variable-assignment",
            "name": "saleFeePercentage",
            "src": "contracts\\NFTMarket.sol:254"
          },
          {
            "kind": "state-variable-assignment",
            "name": "volumeTraded",
            "src": "contracts\\NFTMarket.sol:255"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket.sol:199"
            },
            {
              "label": "_itemIds",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(Counter)1831_storage",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:244"
            },
            {
              "label": "_itemsSold",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)1831_storage",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:245"
            },
            {
              "label": "_itemsCancelled",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)1831_storage",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:246"
            },
            {
              "label": "_offerIds",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Counter)1831_storage",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:249"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address_payable",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:251"
            },
            {
              "label": "discountManager",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:252"
            },
            {
              "label": "saleFeePercentage",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:254"
            },
            {
              "label": "volumeTraded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:255"
            },
            {
              "label": "idToMarketItem",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)252_storage)",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:282"
            },
            {
              "label": "contractToTokenToItemId",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:283"
            },
            {
              "label": "idToMarketOffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_struct(MarketOffer)233_storage)dyn_storage)",
              "contract": "NFTMarket721",
              "src": "contracts\\NFTMarket.sol:285"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(MarketOffer)233_storage)dyn_storage": {
              "label": "struct NFTMarket721.MarketOffer[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_array(t_struct(MarketOffer)233_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct NFTMarket721.MarketOffer[])"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)252_storage)": {
              "label": "mapping(uint256 => struct NFTMarket721.MarketItem)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)1831_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(MarketItem)252_storage": {
              "label": "struct NFTMarket721.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "buyer",
                  "type": "t_address_payable"
                },
                {
                  "label": "category",
                  "type": "t_string_storage"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "isSold",
                  "type": "t_bool"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                }
              ]
            },
            "t_struct(MarketOffer)233_storage": {
              "label": "struct NFTMarket721.MarketOffer",
              "members": [
                {
                  "label": "offerId",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "offerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "offerTime",
                  "type": "t_uint256"
                },
                {
                  "label": "cancelled",
                  "type": "t_bool"
                },
                {
                  "label": "accepted",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\NFTMarket.sol:184",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\NFTMarket.sol:201"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\NFTMarket.sol:199"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTMarket.sol:678",
        "version": {
          "withMetadata": "e406d1db3778867dfc2268956a5318246d5f2b69e191161f793d06245cf8cc72",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\NFTCollections.sol:222",
        "version": {
          "withMetadata": "07565dd981e0518161caaab755511159b36534b7243aa1663e0bc4a94f572881",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\NFTCollections.sol:381"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\NFTCollections.sol:422",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTCollections.sol:1119",
        "version": {
          "withMetadata": "f973d38eb24b09c52abdca6a204c367209507e74dced9a332f675fdc3fe919b8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTCollections.sol:525",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "contracts\\NFTCollections.sol:552",
        "version": {
          "withMetadata": "91f893e0ff6adadc582dedbe43c111b8cb0bea5cd3b273b734f9e6cfe65c0a83",
          "withoutMetadata": "287d436a69f9ca1344bead95990773bb3a6f566db2d3ed003bcb57a2ce5fbbb3",
          "linkedWithoutMetadata": "287d436a69f9ca1344bead95990773bb3a6f566db2d3ed003bcb57a2ce5fbbb3"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\NFTCollections.sol:577"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:572"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Enumerable": {
        "src": "contracts\\NFTCollections.sol:956",
        "inherit": [
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:572"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:958"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:961"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:964"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:967"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165": {
        "src": "contracts\\NFTCollections.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTCollections.sol:37",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Enumerable": {
        "src": "contracts\\NFTCollections.sol:923",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "contracts\\NFTCollections.sol:194",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts\\NFTCollections.sol:170",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTToken721": {
        "src": "contracts\\NFTCollections.sol:1223",
        "version": {
          "withMetadata": "d9570c3836e74cd084dc8d8538cd846ff3f5ac93a1cc357d54defffd754f903a",
          "withoutMetadata": "26fb8bf61cb79f6115230bbdbf9c482faa5dfab49f3a3f695dd8b3923dbd8324",
          "linkedWithoutMetadata": "26fb8bf61cb79f6115230bbdbf9c482faa5dfab49f3a3f695dd8b3923dbd8324"
        },
        "inherit": [
          "Ownable",
          "ERC721Enumerable",
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string,string,string,string)",
          "updateLogoURI(string)",
          "updateFeaturedURI(string)",
          "updateBannerURI(string)",
          "updateCollectionName(string)",
          "updateCustomURI(string)",
          "tokenURI(uint256)",
          "tokensOfOwner(address)",
          "mint(string)",
          "mint_art(string,string,string,string)",
          "mint_item(string,string,string,string,string[],string[])",
          "updateProperty(uint256,string,string)",
          "withdraw_all()",
          "updateBeneficiary(address)",
          "updateMintPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFTToken721",
            "src": "contracts\\NFTCollections.sol:1262"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINT_PRICE",
            "src": "contracts\\NFTCollections.sol:1242"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTCollections.sol:572"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:958"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:961"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:964"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTCollections.sol:967"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTCollections.sol:1166"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(Counter)1887_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1225"
            },
            {
              "label": "beneficiary",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1226"
            },
            {
              "label": "logoURI",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1228"
            },
            {
              "label": "featuredURI",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1230"
            },
            {
              "label": "bannerURI",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1232"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "16",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1234"
            },
            {
              "label": "customURI",
              "offset": 0,
              "slot": "17",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1236"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1238"
            },
            {
              "label": "treasuaryFee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1240"
            },
            {
              "label": "MINT_PRICE",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1242"
            },
            {
              "label": "_creators",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1244"
            },
            {
              "label": "_tokenUri",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1246"
            },
            {
              "label": "_tokenName",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1248"
            },
            {
              "label": "_externalLink",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1250"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1252"
            },
            {
              "label": "_propertyNames",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1254"
            },
            {
              "label": "_propertyMapping",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1255"
            },
            {
              "label": "_kind",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_uint256,t_uint8)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTCollections.sol:1257"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])"
            },
            "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(uint256 => mapping(string => string))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_uint8)": {
              "label": "mapping(uint256 => uint8)"
            },
            "t_string_memory_ptr": {
              "label": "string"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)1887_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\NFTCollections.sol:1165",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\NFTCollections.sol:1173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTCollections.sol:1166"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Strings": {
        "src": "contracts\\NFTCollections.sol:443",
        "version": {
          "withMetadata": "bd55df447c41a7b70be978dc04f1c2f6822770aec8829383aa2616cc0a7b5226",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "collections721": {
        "src": "contracts\\NFTCollections.sol:1385",
        "version": {
          "withMetadata": "a883f9ec1189466f228d0fbafe533b7d36acdc8cfd4b493d07f342fc45221c35",
          "withoutMetadata": "970eb2d33f9253914c32a7f2f5020b523c2cc79a95c954632c51d04a68ccb164",
          "linkedWithoutMetadata": "970eb2d33f9253914c32a7f2f5020b523c2cc79a95c954632c51d04a68ccb164"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "createCollection(string,string,string,string,string)",
          "getMyCollectionCount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "myCollections",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "collections721",
              "src": "contracts\\NFTCollections.sol:1386"
            },
            {
              "label": "allCollections",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "collections721",
              "src": "contracts\\NFTCollections.sol:1387"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\NFTBundle.sol:222",
        "version": {
          "withMetadata": "2ef8f6d983b075ac9a3a9aec0087539f3a91110751f26d28072e8875377f805d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\NFTBundle.sol:381"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\NFTBundle.sol:422",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTBundle.sol:1119",
        "version": {
          "withMetadata": "b70b59c0e8602358dc2ef53904df32e131d9f0e930eb1ac0a50e17dcf16c56ba",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTBundle.sol:525",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "contracts\\NFTBundle.sol:552",
        "version": {
          "withMetadata": "1261c5b77942c2403414ec584c0f218e9707087ae98b1759908e234f319020cc",
          "withoutMetadata": "287d436a69f9ca1344bead95990773bb3a6f566db2d3ed003bcb57a2ce5fbbb3",
          "linkedWithoutMetadata": "287d436a69f9ca1344bead95990773bb3a6f566db2d3ed003bcb57a2ce5fbbb3"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\NFTBundle.sol:577"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:572"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Enumerable": {
        "src": "contracts\\NFTBundle.sol:956",
        "inherit": [
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:572"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:958"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:961"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:964"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:967"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165": {
        "src": "contracts\\NFTBundle.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTBundle.sol:37",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Enumerable": {
        "src": "contracts\\NFTBundle.sol:923",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "contracts\\NFTBundle.sol:194",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts\\NFTBundle.sol:170",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTBundle": {
        "src": "contracts\\NFTBundle.sol:1222",
        "version": {
          "withMetadata": "61550822e72b7c1c6d12c88a21da3e2556d62deb09d44516e77bc56b56e2e4f6",
          "withoutMetadata": "618503e56735abaa855a6609f552ab74e7dcd11facf910392451323b8f58569b",
          "linkedWithoutMetadata": "618503e56735abaa855a6609f552ab74e7dcd11facf910392451323b8f58569b"
        },
        "inherit": [
          "Ownable",
          "ERC721Enumerable",
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string)",
          "tokensOfOwner(address)",
          "createBundle(contract ERC721[],uint256[])",
          "updateBundle(uint256,contract ERC721[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFTBundle",
            "src": "contracts\\NFTBundle.sol:1239"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINT_PRICE",
            "src": "contracts\\NFTBundle.sol:1227"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTBundle.sol:572"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:958"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:961"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:964"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBundle.sol:967"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBundle.sol:1166"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(Counter)1887_storage",
              "contract": "NFTBundle",
              "src": "contracts\\NFTBundle.sol:1224"
            },
            {
              "label": "_baseTokenURI",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "NFTBundle",
              "src": "contracts\\NFTBundle.sol:1225"
            },
            {
              "label": "MINT_PRICE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFTBundle",
              "src": "contracts\\NFTBundle.sol:1227"
            },
            {
              "label": "bundles",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Item)2073_storage))",
              "contract": "NFTBundle",
              "src": "contracts\\NFTBundle.sol:1233"
            },
            {
              "label": "bundleSize",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "NFTBundle",
              "src": "contracts\\NFTBundle.sol:1234"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(ERC721)1518": {
              "label": "contract ERC721"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Item)2073_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct NFTBundle.Item))"
            },
            "t_mapping(t_uint256,t_struct(Item)2073_storage)": {
              "label": "mapping(uint256 => struct NFTBundle.Item)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)1887_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(Item)2073_storage": {
              "label": "struct NFTBundle.Item",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_contract(ERC721)1518"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\NFTBundle.sol:1165",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\NFTBundle.sol:1173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBundle.sol:1166"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Strings": {
        "src": "contracts\\NFTBundle.sol:443",
        "version": {
          "withMetadata": "05ad61b2e942ded9bf094112ac8c113e3396eb8d7be337c726f7fb495a55882c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\NFTBasic.sol:222",
        "version": {
          "withMetadata": "d5ceeb942e3c105c62c95121796096cbf258a8af5d03b2a5da617cdd1e21ac3f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\NFTBasic.sol:381"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\NFTBasic.sol:422",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "contracts\\NFTBasic.sol:1119",
        "version": {
          "withMetadata": "794f77dcc477fc74250ec08ebc503a27331790784b518867ffd27c373032cc9c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\NFTBasic.sol:525",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "contracts\\NFTBasic.sol:552",
        "version": {
          "withMetadata": "b8632b9ebc3ff44a19b338423953a47a66c5cd2571f34abf43deb291205ce909",
          "withoutMetadata": "287d436a69f9ca1344bead95990773bb3a6f566db2d3ed003bcb57a2ce5fbbb3",
          "linkedWithoutMetadata": "287d436a69f9ca1344bead95990773bb3a6f566db2d3ed003bcb57a2ce5fbbb3"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\NFTBasic.sol:577"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:572"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Enumerable": {
        "src": "contracts\\NFTBasic.sol:956",
        "inherit": [
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:572"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:958"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:961"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:964"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:967"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165": {
        "src": "contracts\\NFTBasic.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\NFTBasic.sol:37",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Enumerable": {
        "src": "contracts\\NFTBasic.sol:923",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "contracts\\NFTBasic.sol:194",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts\\NFTBasic.sol:170",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTToken721": {
        "src": "contracts\\NFTBasic.sol:1223",
        "version": {
          "withMetadata": "f41be61ab4ac83d14342c71984b6d18446714c959d561879270cb358ead6339f",
          "withoutMetadata": "26fb8bf61cb79f6115230bbdbf9c482faa5dfab49f3a3f695dd8b3923dbd8324",
          "linkedWithoutMetadata": "26fb8bf61cb79f6115230bbdbf9c482faa5dfab49f3a3f695dd8b3923dbd8324"
        },
        "inherit": [
          "Ownable",
          "ERC721Enumerable",
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string,string,string,string)",
          "updateLogoURI(string)",
          "updateFeaturedURI(string)",
          "updateBannerURI(string)",
          "updateCollectionName(string)",
          "updateCustomURI(string)",
          "tokenURI(uint256)",
          "tokensOfOwner(address)",
          "mint(string)",
          "mint_art(string,string,string,string)",
          "mint_item(string,string,string,string,string[],string[])",
          "updateProperty(uint256,string,string)",
          "withdraw_all()",
          "updateBeneficiary(address)",
          "updateMintPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFTToken721",
            "src": "contracts\\NFTBasic.sol:1262"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINT_PRICE",
            "src": "contracts\\NFTBasic.sol:1242"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:557"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:560"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:563"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:566"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:569"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\NFTBasic.sol:572"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:958"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:961"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:964"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\NFTBasic.sol:967"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBasic.sol:1166"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(Counter)1887_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1225"
            },
            {
              "label": "beneficiary",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1226"
            },
            {
              "label": "logoURI",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1228"
            },
            {
              "label": "featuredURI",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1230"
            },
            {
              "label": "bannerURI",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1232"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "16",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1234"
            },
            {
              "label": "customURI",
              "offset": 0,
              "slot": "17",
              "type": "t_string_storage",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1236"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1238"
            },
            {
              "label": "treasuaryFee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1240"
            },
            {
              "label": "MINT_PRICE",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1242"
            },
            {
              "label": "_creators",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1244"
            },
            {
              "label": "_tokenUri",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1246"
            },
            {
              "label": "_tokenName",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1248"
            },
            {
              "label": "_externalLink",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1250"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1252"
            },
            {
              "label": "_propertyNames",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1254"
            },
            {
              "label": "_propertyMapping",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1255"
            },
            {
              "label": "_kind",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_uint256,t_uint8)",
              "contract": "NFTToken721",
              "src": "contracts\\NFTBasic.sol:1257"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])"
            },
            "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(uint256 => mapping(string => string))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_uint8)": {
              "label": "mapping(uint256 => uint8)"
            },
            "t_string_memory_ptr": {
              "label": "string"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)1887_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\NFTBasic.sol:1165",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\NFTBasic.sol:1173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBasic.sol:1166"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Strings": {
        "src": "contracts\\NFTBasic.sol:443",
        "version": {
          "withMetadata": "52fdca476f636e0662ce5d3e7b9eb24ebe35ba9c6878366c35c4f448d56314a2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:455",
        "version": {
          "withMetadata": "5639a6b752e3031ba67265edd378ed39e2cdeb3f4ba9cf1704da2970f2fe86da",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\NFTCollections(ERC-1155).sol:614"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:223",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1155": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:664",
        "version": {
          "withMetadata": "75893755e0d4d9194e26fff3d4770ac1d5fd272586dfbc674b122ed28a431ed2",
          "withoutMetadata": "ff0e84965a5c1ffdb81d89c1f643128ba2a19fd6e2fdb9b84574bec73d537770",
          "linkedWithoutMetadata": "ff0e84965a5c1ffdb81d89c1f643128ba2a19fd6e2fdb9b84574bec73d537770"
        },
        "inherit": [
          "TokenURI",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "(string)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts\\NFTCollections(ERC-1155).sol:698"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTCollections(ERC-1155).sol:254"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTCollections(ERC-1155).sol:641"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\NFTCollections(ERC-1155).sol:669"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\NFTCollections(ERC-1155).sol:672"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\NFTCollections(ERC-1155).sol:675"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:245",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts\\NFTCollections(ERC-1155).sol:256"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTCollections(ERC-1155).sol:254"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:39",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155MetadataURI": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:142",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155Receiver": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:160",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:1084",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\NFTCollections(ERC-1155).sol:1092"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1085"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:305",
        "version": {
          "withMetadata": "fadcb8001f2b19f3dbe450f3a5c76f418b1dae0dfe04c15ae3aa8d824691a078",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:1136",
        "version": {
          "withMetadata": "0ae1c0f4a3eb2c82ea087a8fb9bf64076e8e6b60394f9fbf6955ba7c6af2608f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Terraworld": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:1161",
        "version": {
          "withMetadata": "71b61b3e70bd3f0051f832fdeb64b825b5ae611ee9c799f390519056e45354e8",
          "withoutMetadata": "8ede099e4e981316686d8e56852959d15493edf68deba80b1709988f7e50b2bf",
          "linkedWithoutMetadata": "8ede099e4e981316686d8e56852959d15493edf68deba80b1709988f7e50b2bf"
        },
        "inherit": [
          "Ownable",
          "ERC1155",
          "TokenURI",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "mint(string,string,uint256)",
          "getCount()",
          "uri(uint256)",
          "setTokenUri(uint256,string)",
          "getTokenIDs(address)",
          "getTokenOwners(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Terraworld",
            "src": "contracts\\NFTCollections(ERC-1155).sol:1187"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTCollections(ERC-1155).sol:254"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTCollections(ERC-1155).sol:641"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\NFTCollections(ERC-1155).sol:669"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\NFTCollections(ERC-1155).sol:672"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\NFTCollections(ERC-1155).sol:675"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1085"
            },
            {
              "label": "hashes",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1164"
            },
            {
              "label": "logo",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1166"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1168"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1170"
            },
            {
              "label": "_hashExists",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1172"
            },
            {
              "label": "_tokenOwner",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1175"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1177"
            },
            {
              "label": "_tokenIDs",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1179"
            },
            {
              "label": "_hashToken",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "Terraworld",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1182"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_memory_ptr": {
              "label": "string"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenURI": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:639",
        "version": {
          "withMetadata": "46a607413afd62e53e3c23789f9175dab89cedce954d5a2ea9fa240e14931978",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTCollections(ERC-1155).sol:641"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "collections": {
        "src": "contracts\\NFTCollections(ERC-1155).sol:1266",
        "version": {
          "withMetadata": "9dc311d8009824631191db09345df7878f0a4c142a306f7b6e4f0a99bbca8a74",
          "withoutMetadata": "50f3890b4cd2e5c12f37728399e164feb4438dedd2dc853d75054bc845166f54",
          "linkedWithoutMetadata": "50f3890b4cd2e5c12f37728399e164feb4438dedd2dc853d75054bc845166f54"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createCollection(string,string)",
          "getMyCollectionCount(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "myCollections",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "collections",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1267"
            },
            {
              "label": "allCollections",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "collections",
              "src": "contracts\\NFTCollections(ERC-1155).sol:1268"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:455",
        "version": {
          "withMetadata": "3ccd8357e5f124e02462ea67a8dc910da11f40861980f022c1d4625ca19d60b7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\NFTBasic(ERC-1155).sol:614"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:223",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1155": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:664",
        "version": {
          "withMetadata": "56f87de3c03206dce7fc92f96f009d762129a503989c8ca53b2b958b3f834ac4",
          "withoutMetadata": "ff0e84965a5c1ffdb81d89c1f643128ba2a19fd6e2fdb9b84574bec73d537770",
          "linkedWithoutMetadata": "ff0e84965a5c1ffdb81d89c1f643128ba2a19fd6e2fdb9b84574bec73d537770"
        },
        "inherit": [
          "TokenURI",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "(string)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts\\NFTBasic(ERC-1155).sol:698"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTBasic(ERC-1155).sol:254"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTBasic(ERC-1155).sol:641"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:669"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:672"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:675"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:245",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts\\NFTBasic(ERC-1155).sol:256"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTBasic(ERC-1155).sol:254"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:39",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155MetadataURI": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:142",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155Receiver": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:160",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:1084",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\NFTBasic(ERC-1155).sol:1092"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1085"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:305",
        "version": {
          "withMetadata": "0a547bbb7557329c9f8e7cc518d3e1f4d0ef243800e8e39c07c3d7126bbf518a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:1136",
        "version": {
          "withMetadata": "d2f334b028c57a18710ea50b30fe90d9872ab66f221052a928002654301af52b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Terraworld": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:1161",
        "version": {
          "withMetadata": "591c56b5d6d5561ba8ec2deeaf91d9fc2d1f6e0c67b70de87be4ca946b1fe084",
          "withoutMetadata": "8ede099e4e981316686d8e56852959d15493edf68deba80b1709988f7e50b2bf",
          "linkedWithoutMetadata": "8ede099e4e981316686d8e56852959d15493edf68deba80b1709988f7e50b2bf"
        },
        "inherit": [
          "Ownable",
          "ERC1155",
          "TokenURI",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "mint(string,string,uint256)",
          "getCount()",
          "uri(uint256)",
          "setTokenUri(uint256,string)",
          "getTokenIDs(address)",
          "getTokenOwners(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Terraworld",
            "src": "contracts\\NFTBasic(ERC-1155).sol:1187"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts\\NFTBasic(ERC-1155).sol:254"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTBasic(ERC-1155).sol:641"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:669"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:672"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\NFTBasic(ERC-1155).sol:675"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1085"
            },
            {
              "label": "hashes",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1164"
            },
            {
              "label": "logo",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1166"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1168"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1170"
            },
            {
              "label": "_hashExists",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1172"
            },
            {
              "label": "_tokenOwner",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1175"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1177"
            },
            {
              "label": "_tokenIDs",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1179"
            },
            {
              "label": "_hashToken",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "Terraworld",
              "src": "contracts\\NFTBasic(ERC-1155).sol:1182"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_memory_ptr": {
              "label": "string"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenURI": {
        "src": "contracts\\NFTBasic(ERC-1155).sol:639",
        "version": {
          "withMetadata": "69f70eab50dd5ebb874dc78a3f627ea99b15cb7ef4d8cf5389addfa03e62c667",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TokenURI",
              "src": "contracts\\NFTBasic(ERC-1155).sol:641"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}